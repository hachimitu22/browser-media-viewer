<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
  </head>
  <body>
    <h1><%= title %></h1>
    <p>Welcome to <%= title %></p>
    <%- include('partials/header'); %>
    <div>
      <form method="POST" enctype="multipart/form-data">
        <input type="file" accept="image/*" name="images" onchange="fileSelected(this)" multiple><br>
        <div id="file-list"></div>

        <input placeholder="タイトル" type="text" name="title">
        <input placeholder="タイトル読み" type="text" name="title_en">
        <% categories.forEach(function(category){ %>
          <div id="<%= category.name %>">
            <div id="<%= category.name %>-group">
              <div id="<%= category.name %>-area-1">
                <input placeholder="<%= category.placeholder %>" type="text" name="<%= category.name %>_1">
                <input placeholder="<%= category.placeholder %>読み" type="text" name="<%= category.name %>_en_1">
                <span onclick="removeLabelArea(this)" hidden>-</span>
              </div>
            </div>
            <span onclick="appendLabelArea(this)">+</span><br>
          </div>
        <% }); %>
        <input type="submit">
      </form>
    </div>
    <script type="text/javascript">
      function fileSelected(element) {
        const files = Array.from(element.files);

        const ul = document.createElement('ul');
        files.forEach(file => {
          const li = document.createElement('li');
          li.textContent = file.name;
          ul.appendChild(li);
        });
        document.getElementById('file-list').appendChild(ul);
      }
      function showThumbnails(element) {
        const files = Array.from(element.files).sort((a, b) => a.name.localeCompare(b.name));
        const thumbnail = document.getElementById('file-list')

        files.forEach(file => {
          const reader = new FileReader();
          reader.onload = (e) => {
            const img = document.createElement('img');
            img.setAttribute('name', file.name);
            img.setAttribute('src', e.target.result);
            // img.setAttribute('width', '25%');
            // img.setAttribute('height', '25%');
            thumbnail.appendChild(img);
          };
          reader.readAsDataURL(file);
        });
      }
      function appendLabelArea(element) {
        const category = element.parentElement;
        const group = category.querySelector('div');
        const area = group.querySelector('div');
        const areaClone = area.cloneNode(true);
        group.appendChild(areaClone);

        const areas = Array.from(group.getElementsByTagName('div'));
        areas.forEach(area => {
          area.querySelector('span').hidden = false;
        });

        // renumberGroup(group);
      }
      function removeLabelArea(element) {
        const area = element.parentElement;
        const group = area.parentElement
        group.removeChild(area);
        // renumberGroup(group);

        const areas = Array.from(group.getElementsByTagName('div'));
        if(areas.length === 1){
          areas[0].querySelector('span').hidden = true;
        }
      }
      function renumberGroup(groupElement){
        const areas = Array.from(groupElement.getElementsByTagName('div'));

        areas.forEach((area, i) => {
          const number = i + 1;
          area.id = area.id.replace(/\d+$/, number);

          const inputs = Array.from(area.getElementsByTagName('input'));
          inputs.forEach(input => {
            input.name = input.name.replace(/\d+$/, number);
          });
        });
      }
    </script>
  </body>
</html>
